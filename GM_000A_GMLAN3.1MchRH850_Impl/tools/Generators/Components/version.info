<?xml version="1.0" encoding="UTF-8"?>
<CANbeddedVersionInfo Version="2.6">
    <Properties>
        <DeliveryDate>2016-04-29</DeliveryDate>
        <CreatedDate>2016-04-07</CreatedDate>
        <CBD>CBD1400346</CBD>
        <SalesSite>VA</SalesSite>
        <IntegrationSite>VA</IntegrationSite>
        <SIP>01.01.35</SIP>
        <Release>01</Release>
        <ProjectNumber>5015512</ProjectNumber>
        <Eval>false</Eval>
        <ErrataContacts>
            <ErrataContact>
                <Firstname>Lucas</Firstname>
                <Surname>Wendling</Surname>
                <Email>Lucas.Wendling@nexteer.com</Email>
            </ErrataContact>
            <ErrataContact>
                <Firstname>Lonnie</Firstname>
                <Surname>Newton</Surname>
                <Email>lonnie.newton@nexteer.com</Email>
            </ErrataContact>
        </ErrataContacts>
        <CustomerContact>
            <Firstname>GMSupport</Firstname>
            <Surname></Surname>
            <Email>GMSupport@us.vector.com</Email>
        </CustomerContact>
        <Customer>Nexteer Automotive Corporation
Package: GMLAN 3.1 - CANbedded License for GM; MultiChannel
Micro: R7F701311
Compiler: GHS 2015.1.7</Customer>
        <DeliveryType>Initial delivery (based on explicit purchase order)</DeliveryType>
        <ReleaseType>Serial production release (complete functionality, fully tested , full process, incl. serial production release)</ReleaseType>
        <DeliveryReason>5015512</DeliveryReason>
        <OEM>Gm</OEM>
        <SLP>GMLAN 3.1</SLP>
        <UseCases/>
        <Controller>Rh850</Controller>
        <CanCell>Rscan</CanCell>
        <Compiler>GreenHills</Compiler>
        <TestedDerivative>R7F701311</TestedDerivative>
        <OrderedDerivative>R7F701311</OrderedDerivative>
        <NDA>true</NDA>
        <ShowBetaDisclaimer>false</ShowBetaDisclaimer>
    </Properties>
    <ComponentCheck>
        <Component Version="1.00.01" ScanPattern="CBD_Gm_SLP9" Project="CBD_Gm_SLP9" Delivered="true" Component="Preconfig"/>
        <Component Version="3.54.00" ScanPattern="Common_Vdef" Project="Common_Vdef" Delivered="true" Component="Implementation">
            <RelativeFileSpec>v_def.h</RelativeFileSpec>
        </Component>
        <Component Version="1.07.03" ScanPattern="Cp_XcpOnCan" Project="Cp_XcpOnCan" Delivered="true" Component="Implementation">
            <RelativeFileSpec>xcp_can.h</RelativeFileSpec>
        </Component>
        <Component Version="1.07.00" ScanPattern="Diag_CanDescGgdaExt_Gm" Project="Diag_CanDescGgdaExt_Gm" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Diag_CANdescGgdaExt_Gm.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.07.00" ScanPattern="Diag_CanDescGgdaExt_Gm" Project="Diag_CanDescGgdaExt_Gm" Delivered="true" Component="Implementation">
            <RelativeFileSpec>ggda.h</RelativeFileSpec>
        </Component>
        <Component Version="6.18.00" ScanPattern="Diag_CanDesc__coreBase" Project="Diag_CanDesc__coreBase" Delivered="true" Component="GenTool_Geny_CANdesc"/>
        <Component Version="6.20.00" ScanPattern="Diag_CanDesc__coreBase" Project="Diag_CanDesc__coreBase" Delivered="true" Component="Implementation"/>
        <Component Version="1.28.00" ScanPattern="Diag_DescDataModel" Project="Diag_DescDataModel" Delivered="true" Component="Implementation"/>
        <Component Version="6.25.00" ScanPattern="Diag_Geny_coreBase" Project="Diag_Geny_coreBase" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Diag_CanDesc__coreBase.dll</RelativeFileSpec>
        </Component>
        <Component Version="3.15.00" ScanPattern="DrvCan_Rh850RscanHll" Project="DrvCan_Rh850RscanHll" Delivered="true" Component="Implementation">
            <RelativeFileSpec>can_def.h</RelativeFileSpec>
        </Component>
        <Component Version="1.11.00" ScanPattern="DrvCan_Sh2RscanHll" Project="DrvCan_Sh2RscanHll" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>DrvCan_Sh2RscanHll.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.00.02" ScanPattern="DrvCan__baseExt_Gm" Project="DrvCan__baseExt_Gm" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>DrvCan__baseExt_Gm.dll</RelativeFileSpec>
        </Component>
        <Component Version="3.07.00" ScanPattern="DrvCan__baseHll" Project="DrvCan__baseHll" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>DrvCan__baseHll.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.09.01" ScanPattern="DrvCan__baseRi14" Project="DrvCan__baseRi14" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>DrvCan__baseRi14.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.02.00" ScanPattern="DrvCan__baseRi15Hll" Project="DrvCan__baseRi15Hll" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>DrvCan__baseRi15Hll.dll</RelativeFileSpec>
        </Component>
        <Component Version="9.03.01" ScanPattern="GenTool_CanDbLib" Project="GenTool_CanDbLib" Delivered="true" Component="GenTool_Geny"/>
        <Component Version="1.15.00" ScanPattern="GenTool_GenyFrameworkGenXml" Project="GenTool_GenyFrameworkGenXml" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>GenXML.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.03.00" ScanPattern="GenTool_GenyGraphicsLibCan" Project="GenTool_GenyGraphicsLibCan" Delivered="true" Component="GenTool_Geny"/>
        <Component Version="1.05.01" ScanPattern="GenTool_GenyGuiChannelCfg" Project="GenTool_GenyGuiChannelCfg" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>CanLinCfgar.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.00.01" ScanPattern="GenTool_GenyHtmlConfigDocumentor" Project="GenTool_GenyHtmlConfigDocumentor" Delivered="true" Component="Implementation"/>
        <Component Version="1.27.00" ScanPattern="GenTool_GenyObjectHierarchyCan" Project="GenTool_GenyObjectHierarchyCan" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>ohcanar.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.12.00" ScanPattern="GenTool_GenyObjectModel" Project="GenTool_GenyObjectModel" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>GenTool_GenyObjectModel.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.02.03" ScanPattern="GenTool_GenyPluginConfigDocumentor" Project="GenTool_GenyPluginConfigDocumentor" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>GenTool_GenyPluginConfigDocumentor.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.60.04" ScanPattern="GenTool_XA2lParser" Project="GenTool_XA2lParser" Delivered="true" Component="Implementation">
            <RelativeFileSpec>asap2prs.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.00.00" ScanPattern="GenTool_XChecksumcrc" Project="GenTool_XChecksumcrc" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>GenTool_XChecksumcrc.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.10.00" ScanPattern="Hw_Rh850Cpu" Project="Hw_Rh850Cpu" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Hw_Rh850Cpu.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.12.00" ScanPattern="Hw_Sh2RscanCpuCan" Project="Hw_Sh2RscanCpuCan" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Hw_Sh2RscanCpuCan.dll</RelativeFileSpec>
        </Component>
        <Component Version="2.30.00" ScanPattern="Hw__baseCpuCan" Project="Hw__baseCpuCan" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Hw__baseCpuCan.dll;AFRSettings.dll;MaskPSW.dll;chpcfg01.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.18.05" ScanPattern="Il_Vector" Project="Il_Vector" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Il_Vector.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.01.02" ScanPattern="Il_Vector_Gm" Project="Il_Vector_Gm" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Il_Vector_Gm.dll</RelativeFileSpec>
        </Component>
        <Component Version="1.02.00" ScanPattern="Il_Vector_Gm" Project="Il_Vector_Gm" Delivered="true" Component="Implementation">
            <RelativeFileSpec>il_def.h;_il_inc.h</RelativeFileSpec>
        </Component>
        <Component Version="1.02.02" ScanPattern="Nm_Gmlan_Gm" Project="Nm_Gmlan_Gm" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Nm_Gmlan_Gm.dll</RelativeFileSpec>
        </Component>
        <Component Version="4.04.03" ScanPattern="Nm_Gmlan_Gm" Project="Nm_Gmlan_Gm" Delivered="true" Component="Implementation">
            <RelativeFileSpec>gmnmdef.h;_MemDef.h</RelativeFileSpec>
        </Component>
        <Component Version="2.34.00" ScanPattern="Tp_Iso15765" Project="Tp_Iso15765" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>Tp_Iso15765.dll</RelativeFileSpec>
        </Component>
        <Component Version="3.08.03" ScanPattern="Tp_Iso15765" Project="Tp_Iso15765" Delivered="true" Component="Implementation">
            <RelativeFileSpec>tpmc.h</RelativeFileSpec>
        </Component>
        <Component Version="1.04.00" ScanPattern="VStdLib_Rh850" Project="VStdLib_Rh850" Delivered="true" Component="Implementation">
            <RelativeFileSpec>vstdlib.h</RelativeFileSpec>
        </Component>
        <Component Version="1.02.00" ScanPattern="VStdLib__base" Project="VStdLib__base" Delivered="true" Component="GenTool_Geny">
            <RelativeFileSpec>VStdLib__base.dll</RelativeFileSpec>
        </Component>
    </ComponentCheck>
    <DeliveryVersionNumber>
        <Byte>01</Byte>
        <Byte>01</Byte>
        <Byte>35</Byte>
        <Byte>01</Byte>
        <Byte>40</Byte>
        <Byte>03</Byte>
        <Byte>46</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
    </DeliveryVersionNumber>
    <Transformators>
	
	
	
	<Version Fix="2" Major="1" Minor="2"/>
	<DataMaxVersion Major="1" Minor="1"/>
	<SourceHeader>
		<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" version="1.0">
			<xsl:output method="text"/>
		</xsl:stylesheet>
	</SourceHeader>
	<HtmlOutput>
		<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="2.0">
			<xsl:output method="html"/>
			
			
			<xsl:template match="/">
				<html>
					<head>
						<title>
							<xsl:text>Delivery description </xsl:text>
							<xsl:value-of select="/CANbeddedVersionInfo/Properties/CBD"/>
						</title>
						<style>
			     * {
					  font-family: Verdana, Helvetica, sans-serif;
					  color:black;
				 }

				  body {
					  background: #F7F7F7;
					  margin: 0;
					  padding: 0;
					  link=#234691; 
					  vlink=#234691;
				 }
				 h1 {
					  font-size: 16pt;
					  color: white;
					  text-align: center;
					  background: #AD0829;
					  padding:	20px 10px 20px 10px;
				  }
				  h3 {
					  font-size: 12pt;
					  color: black;
					  padding: 4px 10px 4px 10px;
					  border-bottom: medium solid;
					  border-bottom-color: #AD0829;				  }
                  h4 {
					  font-size: 10pt;
					  font-weight:  bold;
					  padding: 4px 10px 4px 10px;
				  }
				  table {
					  width: 90%;
					  border-collapse: collapse;  /* separate*/
					  margin-left: auto;    /* center table horizontally */
					  margin-right: auto;
				  }
				  th {
					  text-align:   left;
					  font-weight:  bold;
					  background: #DEDEDE;
				  }
				  tr.even {
					  background: #EEEEEE;
				  }
				 p, td, th, li {
					  font-size: 10pt;
					  vertical-align: top;
					  padding-right: 1em;
				  }
				 td.highlight {
					  width: 20%;
					  text-align: right;
					  color: #AD0829;
				  }
				 td.bold {
					  font-weight:  bold;
				  }
				 .small-text {
					  font-size: 8pt;
				  }
			 </style>
					</head>
					
					<body>
						
						<xsl:variable name="vIsMerged">
							<xsl:choose>
								<xsl:when test="count(/CANbeddedVersionInfo/MergedPackage)&gt;0">
									<xsl:text>True</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:text>False</xsl:text>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						
						<xsl:variable name="vBaseAddress" select="/CANbeddedVersionInfo/MergedPackage[$vIsMerged='True']|/CANbeddedVersionInfo[$vIsMerged='False']"/>
						
						<xsl:variable name="vIsBuild">
							<xsl:choose>
								<xsl:when test="count($vBaseAddress//makesupport)&gt;0">
									<xsl:text>True</xsl:text>
								</xsl:when>
								<xsl:otherwise>
									<xsl:text>False</xsl:text>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						
						<h1>
							<xsl:text>Delivery Description </xsl:text>
							<xsl:value-of select="/CANbeddedVersionInfo/Properties/CBD"/>
							<xsl:if test="$vIsMerged='True'">
								<xsl:text> with </xsl:text>
								<xsl:for-each select="$vBaseAddress//SubPackage">
									<xsl:value-of select=".//CBD"/>
									<xsl:text> </xsl:text>
								</xsl:for-each>
							</xsl:if>
						</h1>
						
						<h4>Delivery Information</h4>
						<ul type="disc">
							<xsl:for-each select="$vBaseAddress//Properties">
								<xsl:sort select=".//CBD"/>
								<xsl:variable name="vDeliverLink">
									<xsl:text>#_Delivery_Information_</xsl:text>
									<xsl:value-of select="position()"/>
								</xsl:variable>
								<xsl:variable name="vDeliverName">
									<xsl:choose>
										<xsl:when test="$vIsMerged='True'">
											<xsl:text>Delivery Information - </xsl:text>
											<xsl:value-of select=".//CBD"/>
										</xsl:when>
										<xsl:otherwise>
											<xsl:text>Delivery Information</xsl:text>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<li>
									<a href="{$vDeliverLink}">
										<xsl:value-of select="$vDeliverName"/>
									</a>
								</li>
							</xsl:for-each>
							
							<li>
								<a href="#_Detailed_Version_Information">Detailed Version Information</a>
							</li>
						</ul>
						
						<xsl:if test="$vIsBuild='True'">
							<h4>Build Environment</h4>
							<ul type="disc">
								<xsl:for-each select="$vBaseAddress//makesupport">
									<xsl:sort select="..//CBD"/>
									<li>
										<xsl:variable name="vDeliverLink">
											<xsl:text>#_BuildEnvironment_</xsl:text>
											<xsl:value-of select="position()"/>
										</xsl:variable>
										<xsl:variable name="vDeliverName">
											<xsl:choose>
												<xsl:when test="$vIsMerged='True'">
													<xsl:text>Versions and Options - </xsl:text>
													<xsl:value-of select="../Properties/CBD"/>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>Versions and Options</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:variable>
										<a href="{$vDeliverLink}">
											<xsl:value-of select="$vDeliverName"/>
										</a>
									</li>
								</xsl:for-each>
							</ul>
						</xsl:if>
						<br/>
						
						
						<xsl:for-each select="$vBaseAddress[$vIsMerged!='True']|$vBaseAddress/*[$vIsMerged='True']">
							<xsl:sort select=".//CBD"/>
							<xsl:call-template name="CBD_DeliveryInfo"/>
						</xsl:for-each>
						
						<xsl:call-template name="DetailedVersionInfo"/>
						
						<xsl:if test="$vIsBuild='True'">
							<h2>Build Environment</h2>
							<xsl:for-each select="$vBaseAddress//makesupport[$vIsMerged!='True']|$vBaseAddress/*//makesupport[$vIsMerged='True']">
								<xsl:sort select="..//CBD"/>
								<xsl:call-template name="BuildEnvironment"/>
							</xsl:for-each>
						</xsl:if>
					</body>
				</html>
			</xsl:template>
			
			
			<xsl:template name="CBD_DeliveryInfo">
				<xsl:variable name="varID">
					<xsl:text>_Delivery_Information_</xsl:text>
					<xsl:value-of select="position()"/>
				</xsl:variable>
				<h3>
					<a id="{$varID}">Delivery Information <xsl:value-of select=".//Properties/CBD "/>
					</a>
				</h3>
				<table>
					
					<xsl:call-template name="DeliveryId"/>
					
					<tr>
						<td class="highlight">License Information</td>
						<td>
							<xsl:value-of select=".//Properties/Customer"/>
						</td>
					</tr>
					
					<xsl:if test=".//Properties/Eval='true'">
						<tr>
							<td class="highlight">Evaluation License</td>
							<td class="bold">
								<xsl:text>This license is for evaluation and prototyping purposes only.</xsl:text>
							</td>
						</tr>
					</xsl:if>
					
					<xsl:call-template name="CustomerContacts"/>
					
					<xsl:call-template name="VectorContact"/>
					
					<xsl:call-template name="DeliveryInfoGeneral"/>
				</table>
			</xsl:template>
			
			
			<xsl:template name="DetailedVersionInfo">
				<h3>
					<a id="_Detailed_Version_Information">Detailed Version Information</a>
				</h3>
				<table>
					<tbody>
						<tr>
							<th>Project</th>
							<th>Component</th>
							<th>Version</th>
						</tr>
						<xsl:for-each select="/CANbeddedVersionInfo/ComponentCheck/Component">
							<xsl:variable name="class">
								<xsl:choose>
									<xsl:when test="position() mod 2 = 1">odd</xsl:when>
									<xsl:otherwise>even</xsl:otherwise>
								</xsl:choose>
							</xsl:variable>
							<tr class="{$class}">
								<td>
									<xsl:value-of select="@Project"/>
								</td>
								<td>
									<xsl:value-of select="@Component"/>
								</td>
								<td>
									<xsl:value-of select="@Version"/>
								</td>
							</tr>
						</xsl:for-each>
					</tbody>
				</table>
			</xsl:template>
			
			
			<xsl:template name="BuildEnvironment">
				<xsl:variable name="vDeliverLink">
					<xsl:text>_BuildEnvironment_</xsl:text>
					<xsl:value-of select="position()"/>
				</xsl:variable>
				<h3>
					<a id="{$vDeliverLink}">Versions and Options - <xsl:value-of select="..//CBD"/>
					</a>
				</h3>
				<table>
					<xsl:for-each select="./devtoolinfo/tool">
						<tr class="even">
							
							<td colspan="2">
								<xsl:value-of select="@type"/>
							</td>
						</tr>
						<xsl:for-each select="./entry">
							<tr>
								<td class="highlight">
									<xsl:value-of select="@type"/>
								</td>
								<td>
									<xsl:value-of select="."/>
								</td>
							</tr>
						</xsl:for-each>
					</xsl:for-each>
				</table>
			</xsl:template>
			
			
			<xsl:template name="DeliveryInfoGeneral">
				
				<tr>
					<td class="highlight">Order Confirmation Number</td>
					<td>
						<xsl:value-of select=".//Properties/ProjectNumber"/>
					</td>
				</tr>
				
				<tr>
					<td class="highlight">Delivery Number</td>
					<td>
						<xsl:value-of select=".//Properties/Release"/>
					</td>
				</tr>
				
				<tr>
					<td class="highlight">Delivery Type</td>
					<td>
						<xsl:value-of select=".//Properties/DeliveryType"/>
					</td>
				</tr>
				
				<tr>
					<td class="highlight">Release Type</td>
					<td>
						<xsl:value-of select=".//Properties/ReleaseType"/>
					</td>
				</tr>
				
				<tr>
					<td class="highlight">Ordered Derivative</td>
					<td>
						<xsl:value-of select=".//Properties/OrderedDerivative"/>
					</td>
				</tr>
				
				<tr>
					<td class="highlight">SIP Version</td>
					<td>
						<xsl:value-of select=".//Properties/SIP"/>
					</td>
				</tr>
			</xsl:template>
			
			
			<xsl:template name="CustomerContacts">
				<xsl:if test="count(.//Properties/ErrataContacts) &gt; 0">
					<tr>
						<td class="highlight">Customer Contacts</td>
						<td>
							<xsl:for-each select=".//Properties/ErrataContacts/ErrataContact">
								<xsl:value-of select="Firstname"/>
								<xsl:text> </xsl:text>
								<xsl:value-of select="Surname"/>
								<xsl:text>   </xsl:text>
								<span color="blue">
									<a>
										<xsl:attribute name="href">
                <xsl:text>Mailto:</xsl:text>
                <xsl:value-of select="Email"/>
            </xsl:attribute>
										<xsl:value-of select="Email"/>
									</a>
								</span>
								<br/>
							</xsl:for-each>
							<span class="small-text">Contact address for Vector for all topics concerning this license. This includes questions and issue reports. Please inform Vector if this contact changes.</span>
						</td>
					</tr>
				</xsl:if>
				
				<xsl:if test="count(.//Properties/ErrataContacts)&lt;= 0">
					<tr>
						<td class="highlight">Customer Contacts</td>
						<td>
							<xsl:text>You have not defined any contact. Therefore Vector will not be able to inform you about potential issues</xsl:text>
						</td>
					</tr>
				</xsl:if>
			</xsl:template>
			
			
			<xsl:template name="VectorContact">
				<tr>
					<td class="highlight">Vector Contact</td>
					<td>
						<a>
							<xsl:attribute name="href">
    <xsl:text>Mailto:</xsl:text>
    <xsl:value-of select=".//Properties/CustomerContact/Email"/>
</xsl:attribute>
							<xsl:value-of select=".//Properties/CustomerContact/Email"/>
						</a>
						<br/>
						<span class="small-text">Contact address at Vector for all questions concerning this delivery.</span>
					</td>
				</tr>
			</xsl:template>
			
			
			<xsl:template name="DeliveryId">
				<tr>
					<td class="highlight">Delivery ID</td>
					<td>
						<xsl:for-each select=".//DeliveryVersionNumber/Byte">
							<xsl:value-of select="."/>
							<xsl:text>.</xsl:text>
						</xsl:for-each>
						<br/>
						<span class="small-text">This is the unique identification number of this delivery. Please have this number ready at hand when contacting Vector customer support.</span>
					</td>
				</tr>
			</xsl:template>
		</xsl:stylesheet>
	</HtmlOutput>
</Transformators>
</CANbeddedVersionInfo>
